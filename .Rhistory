load("Workspace.RData")
library(readxl)
library(rmdformats)
library(tidyverse)
library(forecast)
Lions_Den_data = read_excel("Lions_Den_data.xlsx")
ggplot(Lions_Den_data, aes(x=DATE, y = `Hard coal consumption per capita [tones]`)) + geom_line() + ggtitle("Hard coal consumption 1994 - 2020")
data_ts <- ts(Lions_Den_data$`Hard coal consumption per capita [tones]`, frequency = 12, start = c(1994, 7))
ggseasonplot(data_ts, year.labels=TRUE, year.labels.left=TRUE, col=rainbow(n=25, start = 0, end = 24/25, alpha = 0.6)) +
ylab("Hard coal consumption per capita [tones]") +
ggtitle("Seasonal plot: Hard coal consumption")
boxplot(data_ts~cycle(data_ts))
data <- mutate(data, year = as.numeric(substring(DATE, 1, 4)), month = as.numeric(substring(DATE, 6, 7)), month_name = month.name[month])
data <- mutate(data, year = as.numeric(substring(DATE, 1, 4)), month = as.numeric(substring(DATE, 6, 7)), month_name = month.name[month])
data <- mutate(data, year = as.numeric(substring(DATE, 1, 4)), month = as.numeric(substring(DATE, 6, 7)), month_name = month.name[month])
data <- mutate(data, year = as.numeric(substring(DATE, 1, 4)), month = as.numeric(substring(DATE, 6, 7)), month_name = month.name[month])
data <- mutate(data, year = as.numeric(substring(DATE, 1, 4)), month = as.numeric(substring(DATE, 6, 7)))
data <- mutate(data, year = as.numeric(substring(DATE, 1, 4)), month = as.numeric(substring(DATE, 6, 7)))
data <- mutate(data, year = as.numeric(substring(DATE, 1, 4)), month = as.numeric(substring(DATE, 6, 7)))
library(readxl)
library(rmdformats)
library(tidyverse)
library(forecast)
Lions_Den_data = read_excel("Lions_Den_data.xlsx")
ggplot(Lions_Den_data, aes(x=DATE, y = `Hard coal consumption per capita [tones]`)) + geom_line() + ggtitle("Hard coal consumption 1994 - 2020")
data_ts <- ts(Lions_Den_data$`Hard coal consumption per capita [tones]`, frequency = 12, start = c(1994, 7))
ggseasonplot(data_ts, year.labels=TRUE, year.labels.left=TRUE, col=rainbow(n=25, start = 0, end = 24/25, alpha = 0.6)) +
ylab("Hard coal consumption per capita [tones]") +
ggtitle("Seasonal plot: Hard coal consumption")
boxplot(data_ts~cycle(data_ts))
data <- mutate(data, year = as.numeric(substring(DATE, 1, 4)), month = as.numeric(substring(DATE, 6, 7)))
library(dplyr)
library(readxl)
library(rmdformats)
library(tidyverse)
library(forecast)
Lions_Den_data = read_excel("Lions_Den_data.xlsx")
ggplot(Lions_Den_data, aes(x=DATE, y = `Hard coal consumption per capita [tones]`)) + geom_line() + ggtitle("Hard coal consumption 1994 - 2020")
data_ts <- ts(Lions_Den_data$`Hard coal consumption per capita [tones]`, frequency = 12, start = c(1994, 7))
ggseasonplot(data_ts, year.labels=TRUE, year.labels.left=TRUE, col=rainbow(n=25, start = 0, end = 24/25, alpha = 0.6)) +
ylab("Hard coal consumption per capita [tones]") +
ggtitle("Seasonal plot: Hard coal consumption")
boxplot(data_ts~cycle(data_ts))
data <- mutate(data, year = as.numeric(substring(DATE, 1, 4)), month = as.numeric(substring(DATE, 6, 7)))
data %>% mutate(year = as.numeric(substring(DATE, 1, 4)), month = as.numeric(substring(DATE, 6, 7)))
library(readxl)
library(rmdformats)
library(tidyverse)
library(forecast)
Lions_Den_data = read_excel("Lions_Den_data.xlsx")
ggplot(Lions_Den_data, aes(x=DATE, y = `Hard coal consumption per capita [tones]`)) + geom_line() + ggtitle("Hard coal consumption 1994 - 2020")
data_ts <- ts(Lions_Den_data$`Hard coal consumption per capita [tones]`, frequency = 12, start = c(1994, 7))
ggseasonplot(data_ts, year.labels=TRUE, year.labels.left=TRUE, col=rainbow(n=25, start = 0, end = 24/25, alpha = 0.6)) +
ylab("Hard coal consumption per capita [tones]") +
ggtitle("Seasonal plot: Hard coal consumption")
boxplot(data_ts~cycle(data_ts))
data %>% mutate(year = as.numeric(substring(DATE, 1, 4)), month = as.numeric(substring(DATE, 6, 7)))
# plots for each year
ggplot(data, aes(x=month, y = `Hard coal consumption per capita [tones]`)) + geom_line() + facet_wrap(~year)
library(readxl)
library(rmdformats)
library(tidyverse)
library(forecast)
Lions_Den_data = read_excel("Lions_Den_data.xlsx")
ggplot(Lions_Den_data, aes(x=DATE, y = `Hard coal consumption per capita [tones]`)) + geom_line() + ggtitle("Hard coal consumption 1994 - 2020")
data_ts <- ts(Lions_Den_data$`Hard coal consumption per capita [tones]`, frequency = 12, start = c(1994, 7))
ggseasonplot(data_ts, year.labels=TRUE, year.labels.left=TRUE, col=rainbow(n=25, start = 0, end = 24/25, alpha = 0.6)) +
ylab("Hard coal consumption per capita [tones]") +
ggtitle("Seasonal plot: Hard coal consumption")
boxplot(data_ts~cycle(data_ts))
# plots for each year
ggplot(data, aes(x=month, y = `Hard coal consumption per capita [tones]`)) + geom_line() + facet_wrap(~year)
library(readxl)
library(rmdformats)
library(tidyverse)
library(forecast)
Lions_Den_data = read_excel("Lions_Den_data.xlsx")
ggplot(Lions_Den_data, aes(x=DATE, y = `Hard coal consumption per capita [tones]`)) + geom_line() + ggtitle("Hard coal consumption 1994 - 2020")
data_ts <- ts(Lions_Den_data$`Hard coal consumption per capita [tones]`, frequency = 12, start = c(1994, 7))
data_ts <- ts(Lions_Den_data$`Hard coal consumption per capita [tones]`, frequency = 12, start = c(1994, 7))
data_ts <- ts(Lions_Den_data$`Hard coal consumption per capita [tones]`, frequency = 12, start = c(1994, 7))
data_ts <- ts(Lions_Den_data$`Hard coal consumption per capita [tones]`, frequency = 12, start = c(1994, 7))
data_ts <- ts(Lions_Den_data$`Hard coal consumption per capita [tones]`, frequency = 12, start = c(1994, 7))
data_ts <- ts(Lions_Den_data$`Hard coal consumption per capita [tones]`, frequency = 12, start = c(1994, 7))
ggseasonplot(data_ts, year.labels=TRUE, year.labels.left=TRUE, col=rainbow(n=25, start = 0, end = 24/25, alpha = 0.6)) +
ylab("Hard coal consumption per capita [tones]") +
ggtitle("Seasonal plot: Hard coal consumption")
boxplot(data_ts~cycle(data_ts))
# plots for each year
ggplot(data, aes(x=month, y = `Hard coal consumption per capita [tones]`)) + geom_line() + facet_wrap(~year)
# plots for each year
ggplot(data, aes(x=month, y = `Hard coal consumption per capita [tones]`)) + geom_line() + facet_wrap(~year)
# plots for each year
ggplot(data, aes(x=month, y = `Hard coal consumption per capita [tones]`)) + geom_line() + facet_wrap(~year)
# plots for each year
ggplot(data, aes(x=month, y = `Hard coal consumption per capita [tones]`)) + geom_line() + facet_wrap(~year)
# plots for each year
ggplot(data, aes(x=month, y = `Hard coal consumption per capita [tones]`)) + geom_line() + facet_wrap(~year)
data %>% mutate(year = as.numeric(substring(DATE, 1, 4)), month = as.numeric(substring(DATE, 6, 7)))
data %>% mutate(year = as.numeric(substring(DATE, 1, 4)), month = as.numeric(substring(DATE, 6, 7)))
data %>% mutate(year = as.numeric(substring(DATE, 1, 4)), month = as.numeric(substring(DATE, 6, 7)))
data %>% mutate(year = as.numeric(substring(DATE, 1, 4)), month = as.numeric(substring(DATE, 6, 7)))
data %>% mutate(year = as.numeric(substring(DATE, 1, 4)), month = as.numeric(substring(DATE, 6, 7)))
data %>% mutate(year = as.numeric(substring(DATE, 1, 4)), month = as.numeric(substring(DATE, 6, 7)))
data %>% mutate(year = as.numeric(substring(DATE, 1, 4)), month = as.numeric(substring(DATE, 6, 7)))
data %>% mutate(year = as.numeric(substring(DATE, 1, 4)), month = as.numeric(substring(DATE, 6, 7)))
data %>% mutate(year = as.numeric(substring(DATE, 1, 4)), month = as.numeric(substring(DATE, 6, 7)))
data %>% mutate(year = as.numeric(substring(DATE, 1, 4)), month = as.numeric(substring(DATE, 6, 7)))
data %>% mutate(year = as.numeric(substring(DATE, 1, 4)), month = as.numeric(substring(DATE, 6, 7)))
data %>% mutate(year = as.numeric(substring(DATE, 1, 4)), month = as.numeric(substring(DATE, 6, 7)))
data %>% mutate(year = as.numeric(substring(DATE, 1, 4)), month = as.numeric(substring(DATE, 6, 7)))
data %>% mutate(year = as.numeric(substring(DATE, 1, 4)), month = as.numeric(substring(DATE, 6, 7)))
data %>% mutate(year = as.numeric(substring(DATE, 1, 4)), month = as.numeric(substring(DATE, 6, 7)))
data %>% mutate(year = as.numeric(substring(DATE, 1, 4)), month = as.numeric(substring(DATE, 6, 7)))
data %>% mutate(year = as.numeric(substring(DATE, 1, 4)), month = as.numeric(substring(DATE, 6, 7)))
data %>% mutate(year = as.numeric(substring(DATE, 1, 4)), month = as.numeric(substring(DATE, 6, 7)))
data %>% mutate(year = as.numeric(substring(DATE, 1, 4)), month = as.numeric(substring(DATE, 6, 7)))
data %>% mutate(year = as.numeric(substring(DATE, 1, 4)), month = as.numeric(substring(DATE, 6, 7)))
data %>% mutate(year = as.numeric(substring(DATE, 1, 4)), month = as.numeric(substring(DATE, 6, 7)))
data %>% mutate(year = as.numeric(substring(DATE, 1, 4)), month = as.numeric(substring(DATE, 6, 7)))
data %>% mutate(year = as.numeric(substring(DATE, 1, 4)), month = as.numeric(substring(DATE, 6, 7)))
data %>% mutate(year = as.numeric(substring(DATE, 1, 4)), month = as.numeric(substring(DATE, 6, 7)))
data %>% mutate(year = as.numeric(substring(DATE, 1, 4)), month = as.numeric(substring(DATE, 6, 7)))
data %>% mutate(year = as.numeric(substring(DATE, 1, 4)), month = as.numeric(substring(DATE, 6, 7)))
data %>% mutate(year = as.numeric(substring(DATE, 1, 4)), month = as.numeric(substring(DATE, 6, 7)))
data %>% mutate(year = as.numeric(substring(DATE, 1, 4)), month = as.numeric(substring(DATE, 6, 7)))
data %>% mutate(year = as.numeric(substring(DATE, 1, 4)), month = as.numeric(substring(DATE, 6, 7)))
data %>% mutate(year = as.numeric(substring(DATE, 1, 4)), month = as.numeric(substring(DATE, 6, 7)))
data %>% mutate(year = as.numeric(substring(DATE, 1, 4)), month = as.numeric(substring(DATE, 6, 7)))
data %>% mutate(year = as.numeric(substring(DATE, 1, 4)), month = as.numeric(substring(DATE, 6, 7)))
data %>% mutate(year = as.numeric(substring(DATE, 1, 4)), month = as.numeric(substring(DATE, 6, 7)))
data %>% mutate(year = as.numeric(substring(DATE, 1, 4)), month = as.numeric(substring(DATE, 6, 7)))
data %>% mutate(year = as.numeric(substring(DATE, 1, 4)), month = as.numeric(substring(DATE, 6, 7)))
data %>% mutate(year = substring(DATE, 1, 4), month = as.numeric(substring(DATE, 6, 7)))
data %>% mutate(year = substring(DATE, 1, 4), month = as.numeric(substring(DATE, 6, 7)))
data %>% mutate(year = substring(DATE, 1, 4), month = as.numeric(substring(DATE, 6, 7)))
data %>% mutate(year = substring(DATE, 1, 4), month = as.numeric(substring(DATE, 6, 7)))
data %>% mutate(year = substring(DATE, 1, 4), month = as.numeric(substring(DATE, 6, 7)))
data %>% mutate(year = substring(DATE, 1, 4), month = as.numeric(substring(DATE, 6, 7)))
data %>% mutate(year = substring(DATE, 1, 4), month = as.numeric(substring(DATE, 6, 7)))
data %>% mutate(year = substring(DATE, 1, 4), month = as.numeric(substring(DATE, 6, 7)))
data %>% mutate(year = substring(DATE, 1, 4), month = as.numeric(substring(DATE, 6, 7)))
data %>% mutate(year = substring(DATE, 1, 4), month = substring(DATE, 6, 7))
data %>% mutate(year = substring(DATE, 1, 4), month = substring(DATE, 6, 7))
data %>% mutate(year = substring(DATE, 1, 4), month = substring(DATE, 6, 7))
data %>% mutate(year = substring(DATE, 1, 4), month = substring(DATE, 6, 7))
data %>% mutate(year = substring(DATE, 1, 4), month = substring(DATE, 6, 7))
data %>% mutate(year = substring(DATE, 1, 4), month = substring(DATE, 6, 7))
data %>% mutate(year = substring(DATE, 1, 4), month = substring(DATE, 6, 7))
data %>% mutate(year = substring(DATE, 1, 4), month = substring(DATE, 6, 7))
data %>% mutate(year = substring(DATE, 1, 4), month = substring(DATE, 6, 7))
data %>% mutate(year = 1, month = substring(DATE, 6, 7))
data %>% mutate(year = 1, month = substring(DATE, 6, 7))
data %>% mutate(year = 1, month = substring(DATE, 6, 7))
data %>% mutate(year = 1, month = substring(DATE, 6, 7))
data %>% mutate(year = 1, month = substring(DATE, 6, 7))
data %>% mutate(year = 1, month = 1)
data %>% mutate(year = 1, month = 1)
data %>% mutate(year = 1, month = 1)
data %>% mutate(year = 1, month = 1)
library(readxl)
library(rmdformats)
library(tidyverse)
library(forecast)
Lions_Den_data = read_excel("Lions_Den_data.xlsx")
ggplot(Lions_Den_data, aes(x=DATE, y = `Hard coal consumption per capita [tones]`)) + geom_line() + ggtitle("Hard coal consumption 1994 - 2020")
data_ts <- ts(Lions_Den_data$`Hard coal consumption per capita [tones]`, frequency = 12, start = c(1994, 7))
ggseasonplot(data_ts, year.labels=TRUE, year.labels.left=TRUE, col=rainbow(n=25, start = 0, end = 24/25, alpha = 0.6)) +
ylab("Hard coal consumption per capita [tones]") +
ggtitle("Seasonal plot: Hard coal consumption")
boxplot(data_ts~cycle(data_ts))
data <- mutate(data, year = as.numeric(substring(DATE, 1, 4)), month = as.numeric(substring(DATE, 6, 7)), month_name = month.name[month])
library(readxl)
library(rmdformats)
library(tidyverse)
library(forecast)
library(dplyr)
Lions_Den_data = read_excel("Lions_Den_data.xlsx")
ggplot(Lions_Den_data, aes(x=DATE, y = `Hard coal consumption per capita [tones]`)) + geom_line() + ggtitle("Hard coal consumption 1994 - 2020")
data_ts <- ts(Lions_Den_data$`Hard coal consumption per capita [tones]`, frequency = 12, start = c(1994, 7))
ggseasonplot(data_ts, year.labels=TRUE, year.labels.left=TRUE, col=rainbow(n=25, start = 0, end = 24/25, alpha = 0.6)) +
ylab("Hard coal consumption per capita [tones]") +
ggtitle("Seasonal plot: Hard coal consumption")
boxplot(data_ts~cycle(data_ts))
data <- mutate(data, year = as.numeric(substring(DATE, 1, 4)), month = as.numeric(substring(DATE, 6, 7)), month_name = month.name[month])
library(readxl)
library(rmdformats)
library(tidyverse)
library(forecast)
library(dplyr)
Lions_Den_data = read_excel("Lions_Den_data.xlsx")
ggplot(Lions_Den_data, aes(x=DATE, y = `Hard coal consumption per capita [tones]`)) + geom_line() + ggtitle("Hard coal consumption 1994 - 2020")
data_ts <- ts(Lions_Den_data$`Hard coal consumption per capita [tones]`, frequency = 12, start = c(1994, 7))
ggseasonplot(data_ts, year.labels=TRUE, year.labels.left=TRUE, col=rainbow(n=25, start = 0, end = 24/25, alpha = 0.6)) +
ylab("Hard coal consumption per capita [tones]") +
ggtitle("Seasonal plot: Hard coal consumption")
boxplot(data_ts~cycle(data_ts))
ggplot(data, aes(x=year, y = `Hard coal consumption per capita [tones]`)) + geom_line() + facet_wrap(~month)
library(readxl)
library(rmdformats)
library(tidyverse)
library(forecast)
library(dplyr)
Lions_Den_data = read_excel("Lions_Den_data.xlsx")
ggplot(Lions_Den_data, aes(x=DATE, y = `Hard coal consumption per capita [tones]`)) + geom_line() + ggtitle("Hard coal consumption 1994 - 2020")
data_ts <- ts(Lions_Den_data$`Hard coal consumption per capita [tones]`, frequency = 12, start = c(1994, 7))
ggseasonplot(data_ts, year.labels=TRUE, year.labels.left=TRUE, col=rainbow(n=25, start = 0, end = 24/25, alpha = 0.6)) +
ylab("Hard coal consumption per capita [tones]") +
ggtitle("Seasonal plot: Hard coal consumption")
boxplot(data_ts~cycle(data_ts))
# ggplot(data, aes(x=year, y = `Hard coal consumption per capita [tones]`)) + geom_line() + facet_wrap(~month)
# decomposition
data_decomp = decompose(data_ts, type="multiplicative")
plot(data_decomp)
data_deseason <- data_ts / data_decomp$seasonal       # <<< tutaj sezonowość jest zawsze dodatnia
# plot(data_deseason)
autoplot(data_ts, series="Data") +
autolayer(data_deseason, series="Seasonally adjusted") + ylab("Hard coal consumption per capita [tonnes]") + ggtitle("Seasonally adjusted hard coal consumption over years")
autoplot(data_ts, series="Data") +
autolayer(trendcycle(stl(data_ts, s.window = "periodic")), series="Trend-cycle") + geom_smooth(method=lm, aes(colour="Linear trend fit"))+
scale_colour_manual(values=c("red", "blue", "cyan3")) + ylab("Hard coal consumption per capita [tonnes]") + ggtitle("Trends of hard coal consumption over years")
# stl decomposition
data_stl <- stl(data_ts, s.window = "periodic")
plot(data_stl)
# deseasoned data using stl
data_stl_deseason <- data_ts / seasonal(data_stl)     # <<< tutaj sezonowość jest czasami ujemna
plot(data_stl_deseason)
data_ts_seasadj <- seasadj(data_stl)
plot(data_ts_seasadj, type="l")
seasonplot(data_ts_seasadj, 12, col=rainbow(25), year.labels=TRUE, main="Seasonal plot: Coal consumption after deseasoning") # seasonal frequency set as 12 for monthly data.
# nie ma dużej różnicy
data_detrend <- lm(data_ts ~ c(1:length(data_ts)))
plot(resid(data_detrend), type="l")  # resid(data_detrend) contains the de-trended series.
# ????
fit <- HoltWinters(data_ts, beta=FALSE, gamma=FALSE)
fit
f<-forecast(fit, 1)
plot(forecast(fit, 12), xlab="Year")
# ETS
fit <- ets(data_ts)
fit
plot(forecast(fit), xlab="Time")
# outliers ? <<<<<<<<<<<<<<<<<<<<<<<<<<
boxplot.stats(data_ts)$out
acf(data_ts, main="Autocorrelation")         # many spikes outside significant zone - data is NOT RANDOM
pacf(data_ts, main="Partial Autocorrelation")
acf(diff(diff(data_ts, 12), 1), main="Autocorrelation - double diff")          # not many spikes outside significant zone data is RANDOM
pacf(diff(diff(data_ts, 12), 1), main="Partial Autocorrelation - double diff")
library(forecast)
model_arima <- auto.arima(data_ts)
library(tseries)
plot.ts(model_arima$residuals)
# ACF for stationary data
acf(ts(model_arima$residuals), main="ACF Residual")
forecast_arima <- forecast(model_arima, level=c(95), h=1*12)
plot(forecast_arima)
cbind("Coal consumption" = data_ts,
"Change in coal" = diff(data_ts, 12),
"Double diff" = diff(diff(data_ts, 12), 1)
) %>% autoplot(facets=TRUE)
library(urca)
data_ts %>% ur.kpss() %>% summary()
diff(data_ts, 12) %>% ur.kpss() %>% summary()
diff(diff(data_ts, 12),1) %>% ur.kpss() %>% summary()
# wystarczy 1 operacja diff, aby otrzymać stationary data
ndiffs(data_ts)
# test pierwiastka jednostkowego
Box.test (forecast_arima, lag = 1, type = "Ljung")
library(anomalize)
install.packages("anomalize")
library(readxl)
library(rmdformats)
library(tidyverse)
library(forecast)
library(dplyr)
Lions_Den_data = read_excel("Lions_Den_data.xlsx")
ggplot(Lions_Den_data, aes(x=DATE, y = `Hard coal consumption per capita [tones]`)) + geom_line() + ggtitle("Hard coal consumption 1994 - 2020")
data_ts <- ts(Lions_Den_data$`Hard coal consumption per capita [tones]`, frequency = 12, start = c(1994, 7))
ggseasonplot(data_ts, year.labels=TRUE, year.labels.left=TRUE, col=rainbow(n=25, start = 0, end = 24/25, alpha = 0.6)) +
ylab("Hard coal consumption per capita [tones]") +
ggtitle("Seasonal plot: Hard coal consumption")
boxplot(data_ts~cycle(data_ts))
# ggplot(data, aes(x=year, y = `Hard coal consumption per capita [tones]`)) + geom_line() + facet_wrap(~month)
# decomposition
data_decomp = decompose(data_ts, type="multiplicative")
plot(data_decomp)
data_deseason <- data_ts / data_decomp$seasonal       # <<< tutaj sezonowość jest zawsze dodatnia
# plot(data_deseason)
autoplot(data_ts, series="Data") +
autolayer(data_deseason, series="Seasonally adjusted") + ylab("Hard coal consumption per capita [tonnes]") + ggtitle("Seasonally adjusted hard coal consumption over years")
autoplot(data_ts, series="Data") +
autolayer(trendcycle(stl(data_ts, s.window = "periodic")), series="Trend-cycle") + geom_smooth(method=lm, aes(colour="Linear trend fit"))+
scale_colour_manual(values=c("red", "blue", "cyan3")) + ylab("Hard coal consumption per capita [tonnes]") + ggtitle("Trends of hard coal consumption over years")
# stl decomposition
data_stl <- stl(data_ts, s.window = "periodic")
plot(data_stl)
# deseasoned data using stl
data_stl_deseason <- data_ts / seasonal(data_stl)     # <<< tutaj sezonowość jest czasami ujemna
plot(data_stl_deseason)
data_ts_seasadj <- seasadj(data_stl)
plot(data_ts_seasadj, type="l")
seasonplot(data_ts_seasadj, 12, col=rainbow(25), year.labels=TRUE, main="Seasonal plot: Coal consumption after deseasoning") # seasonal frequency set as 12 for monthly data.
# nie ma dużej różnicy
data_detrend <- lm(data_ts ~ c(1:length(data_ts)))
plot(resid(data_detrend), type="l")  # resid(data_detrend) contains the de-trended series.
# ????
fit <- HoltWinters(data_ts, beta=FALSE, gamma=FALSE)
fit
f<-forecast(fit, 1)
plot(forecast(fit, 12), xlab="Year")
# ETS
fit <- ets(data_ts)
fit
plot(forecast(fit), xlab="Time")
# outliers ? <<<<<<<<<<<<<<<<<<<<<<<<<<
boxplot.stats(data_ts)$out
acf(data_ts, main="Autocorrelation")         # many spikes outside significant zone - data is NOT RANDOM
pacf(data_ts, main="Partial Autocorrelation")
acf(diff(diff(data_ts, 12), 1), main="Autocorrelation - double diff")          # not many spikes outside significant zone data is RANDOM
pacf(diff(diff(data_ts, 12), 1), main="Partial Autocorrelation - double diff")
library(forecast)
model_arima <- auto.arima(data_ts)
library(tseries)
plot.ts(model_arima$residuals)
# ACF for stationary data
acf(ts(model_arima$residuals), main="ACF Residual")
forecast_arima <- forecast(model_arima, level=c(95), h=1*12)
plot(forecast_arima)
cbind("Coal consumption" = data_ts,
"Change in coal" = diff(data_ts, 12),
"Double diff" = diff(diff(data_ts, 12), 1)
) %>% autoplot(facets=TRUE)
library(urca)
data_ts %>% ur.kpss() %>% summary()
diff(data_ts, 12) %>% ur.kpss() %>% summary()
diff(diff(data_ts, 12),1) %>% ur.kpss() %>% summary()
# wystarczy 1 operacja diff, aby otrzymać stationary data
ndiffs(data_ts)
# test pierwiastka jednostkowego
Box.test (forecast_arima, lag = 1, type = "Ljung")
library(anomalize)
data_tibble <- Lions_Den_data %>% rownames_to_column() %>% as_tibble() %>%
mutate(date = as.Date(DATE)) %>% select(-one_of('DATE'))
data_tibble %>% time_decompose(`Hard coal consumption per capita [tones]`, method="stl", frequency = "auto", trend = "auto") %>%
anomalize(remainder, method="iqr", alpha=0.05, max_anoms = 0.2) %>% plot_anomaly_decomposition()
# now for deseasoned data
data_tibble_deseason <- data_deseason %>% as_tibble() %>%
mutate(date = as.Date(Lions_Den_data$DATE)) %>% select(-one_of('DATE'))
data_tibble_deseason %>% time_decompose(x, method="stl", frequency = "auto", trend = "auto") %>%
anomalize(remainder, method="iqr", alpha=0.05, max_anoms = 0.2) %>% plot_anomaly_decomposition()
data <- mutate(data, year = as.numeric(substring(DATE, 1, 4)), month = as.numeric(substring(DATE, 6, 7)), month_name = month.name[month])
library(readxl)
library(rmdformats)
library(tidyverse)
library(forecast)
library(dplyr)
Lions_Den_data = read_excel("Lions_Den_data.xlsx")
ggplot(Lions_Den_data, aes(x=DATE, y = `Hard coal consumption per capita [tones]`)) + geom_line() + ggtitle("Hard coal consumption 1994 - 2020")
data_ts <- ts(Lions_Den_data$`Hard coal consumption per capita [tones]`, frequency = 12, start = c(1994, 7))
ggseasonplot(data_ts, year.labels=TRUE, year.labels.left=TRUE, col=rainbow(n=25, start = 0, end = 24/25, alpha = 0.6)) +
ylab("Hard coal consumption per capita [tones]") +
ggtitle("Seasonal plot: Hard coal consumption")
boxplot(data_ts~cycle(data_ts))
library(ggplot2)
data <- mutate(data, year = as.numeric(substring(DATE, 1, 4)), month = as.numeric(substring(DATE, 6, 7)), month_name = month.name[month])
library(readxl)
library(rmdformats)
library(tidyverse)
library(forecast)
library(dplyr)
Lions_Den_data = read_excel("Lions_Den_data.xlsx")
ggplot(Lions_Den_data, aes(x=DATE, y = `Hard coal consumption per capita [tones]`)) + geom_line() + ggtitle("Hard coal consumption 1994 - 2020")
data_ts <- ts(Lions_Den_data$`Hard coal consumption per capita [tones]`, frequency = 12, start = c(1994, 7))
ggseasonplot(data_ts, year.labels=TRUE, year.labels.left=TRUE, col=rainbow(n=25, start = 0, end = 24/25, alpha = 0.6)) +
ylab("Hard coal consumption per capita [tones]") +
ggtitle("Seasonal plot: Hard coal consumption")
boxplot(data_ts~cycle(data_ts))
library(ggplot2)
data <- mutate(data, year = as.numeric(substring(DATE, 1, 4)), month = as.numeric(substring(DATE, 6, 7)), month_name = month.name[month])
library(readxl)
library(rmdformats)
library(tidyverse)
library(forecast)
library(dplyr)
Lions_Den_data = read_excel("Lions_Den_data.xlsx")
ggplot(Lions_Den_data, aes(x=DATE, y = `Hard coal consumption per capita [tones]`)) + geom_line() + ggtitle("Hard coal consumption 1994 - 2020")
data_ts <- ts(Lions_Den_data$`Hard coal consumption per capita [tones]`, frequency = 12, start = c(1994, 7))
ggseasonplot(data_ts, year.labels=TRUE, year.labels.left=TRUE, col=rainbow(n=25, start = 0, end = 24/25, alpha = 0.6)) +
ylab("Hard coal consumption per capita [tones]") +
ggtitle("Seasonal plot: Hard coal consumption")
boxplot(data_ts~cycle(data_ts))
library(ggplot2)
mutate(data, year = as.numeric(substring(DATE, 1, 4)), month = as.numeric(substring(DATE, 6, 7)), month_name = month.name[month])
library(readxl)
library(rmdformats)
library(tidyverse)
library(forecast)
library(dplyr)
Lions_Den_data = read_excel("Lions_Den_data.xlsx")
ggplot(Lions_Den_data, aes(x=DATE, y = `Hard coal consumption per capita [tones]`)) + geom_line() + ggtitle("Hard coal consumption 1994 - 2020")
data_ts <- ts(Lions_Den_data$`Hard coal consumption per capita [tones]`, frequency = 12, start = c(1994, 7))
ggseasonplot(data_ts, year.labels=TRUE, year.labels.left=TRUE, col=rainbow(n=25, start = 0, end = 24/25, alpha = 0.6)) +
ylab("Hard coal consumption per capita [tones]") +
ggtitle("Seasonal plot: Hard coal consumption")
boxplot(data_ts~cycle(data_ts))
library(ggplot2)
mutate(data, year = as.numeric(substring(DATE, 1, 4)), month = as.numeric(substring(DATE, 6, 7)), month_name = month.name[month])
library(readxl)
library(rmdformats)
library(tidyverse)
library(forecast)
library(dplyr)
Lions_Den_data = read_excel("Lions_Den_data.xlsx")
ggplot(Lions_Den_data, aes(x=DATE, y = `Hard coal consumption per capita [tones]`)) + geom_line() + ggtitle("Hard coal consumption 1994 - 2020")
data_ts <- ts(Lions_Den_data$`Hard coal consumption per capita [tones]`, frequency = 12, start = c(1994, 7))
ggseasonplot(data_ts, year.labels=TRUE, year.labels.left=TRUE, col=rainbow(n=25, start = 0, end = 24/25, alpha = 0.6)) +
ylab("Hard coal consumption per capita [tones]") +
ggtitle("Seasonal plot: Hard coal consumption")
boxplot(data_ts~cycle(data_ts))
library(ggplot2)
mutate(data, year = as.numeric(substring(DATE, 1, 4)), month = as.numeric(substring(DATE, 6, 7)), month_name = month.name[month])
library(ggplot2)
data <- Lions_Den_data
mutate(data, year = as.numeric(substring(DATE, 1, 4)), month = as.numeric(substring(DATE, 6, 7)), month_name = month.name[month])
# plots for each year
ggplot(data, aes(x=month, y = `Hard coal consumption per capita [tones]`)) + geom_line() + facet_wrap(~year)
library(ggplot2)
data <- Lions_Den_data
data <- mutate(data, year = as.numeric(substring(DATE, 1, 4)), month = as.numeric(substring(DATE, 6, 7)), month_name = month.name[month])
# plots for each year
ggplot(data, aes(x=month, y = `Hard coal consumption per capita [tones]`)) + geom_line() + facet_wrap(~year)
knitr::opts_chunk$set(echo = TRUE)
library(palmerpenguins)
knitr::opts_chunk$set(echo = TRUE)
library(palmerpenguins)
knitr::opts_chunk$set(echo = TRUE)
library(palmerpenguins)
library(dplyr)
library(ggplot2)
library(haven)
theme_set(theme_minimal())
download.file("https://github.com/kflisikowski/ds/blob/master/edu.csv?raw=true", destfile ="edu.csv",mode="wb")
edu <- read.csv("edu.csv",sep=",",dec=".")
library(palmerpenguins)
data(package = 'palmerpenguins')
head(penguins)
glimpse(penguins)
visdat::vis_dat(penguins)
penguins %>%
select(species, body_mass_g, ends_with("_mm")) %>%
GGally::ggpairs(aes(color = species)) +
scale_colour_manual(values = c("darkorange","purple","cyan4")) +
scale_fill_manual(values = c("darkorange","purple","cyan4"))
mass_flipper <- ggplot(data = penguins,
aes(x = flipper_length_mm,
y = body_mass_g)) +
geom_point(aes(color = species,
shape = species),
size = 3,
alpha = 0.8) +
theme_minimal() +
scale_color_manual(values = c("darkorange","purple","cyan4")) +
labs(title = "Penguin size, Palmer Station LTER",
subtitle = "Flipper length and body mass for Adelie, Chinstrap and Gentoo Penguins",
x = "Flipper length (mm)",
y = "Body mass (g)",
color = "Penguin species",
shape = "Penguin species") +
theme(legend.position = c(0.2, 0.7),
legend.background = element_rect(fill = "white", color = NA),
plot.title.position = "plot",
plot.caption = element_text(hjust = 0, face= "italic"),
plot.caption.position = "plot")
mass_flipper
flipper_box <- ggplot(data = penguins, aes(x = species, y = flipper_length_mm)) +
geom_boxplot(aes(color = species), width = 0.3, show.legend = FALSE) +
geom_jitter(aes(color = species), alpha = 0.5, show.legend = FALSE, position = position_jitter(width = 0.2, seed = 0)) +
scale_color_manual(values = c("darkorange","purple","cyan4")) +
theme_minimal() +
labs(x = "Species",
y = "Flipper length (mm)")
flipper_box
ggplot(penguins, aes(x = flipper_length_mm,
y = body_mass_g)) +
geom_point(aes(color = sex)) +
theme_minimal() +
scale_color_manual(values = c("darkorange","cyan4"), na.translate = FALSE) +
labs(title = "Penguin flipper and body mass",
subtitle = "Dimensions for male and female Adelie, Chinstrap and Gentoo Penguins at Palmer Station LTER",
x = "Flipper length (mm)",
y = "Body mass (g)",
color = "Penguin sex") +
theme(legend.position = "bottom",
legend.background = element_rect(fill = "white", color = NA),
plot.title.position = "plot",
plot.caption = element_text(hjust = 0, face= "italic"),
plot.caption.position = "plot") +
facet_wrap(~species)
View(edu)
